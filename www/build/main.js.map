{"version":3,"sources":["../../src/pages/summary/summary.ts","../../src/providers/Data/calculate-estimate.ts","../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/pages/tabs/tabs.ts","../../src/pages/home/home.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["\nimport { Component } from '@angular/core';\nimport { NavController, NavParams } from 'ionic-angular';\n\n// Provider for calculating the summary of the estimate\nimport { CalcProvider } from '../../providers/Data/calculate-estimate';\n\n// Cordova plugin\nimport { EmailComposer } from '@ionic-native/email-composer';\n\n//For alert messages\nimport { AlertController } from 'ionic-angular';\n\n\n@Component({\n  selector: 'page-summary',\n  templateUrl: 'summary.html'\n})\n\nexport class SummaryPage {\n\n  // Estimate creation variables\n  roomName: string;\n  wallHieght: number;\n  roomLength: number;\n  roomWidth: number;\n  paintUsed: string;\n  totalSquareFeet: number;\n  totalPaintCost: string;\n  sqFtPerHr: number;\n  laborPerHr: number;\n  totalLaborCost: string;\n  totalCost: string;\n  roomPhoto: any;\n\n  // Email form input variables intialized\n  email = {\n    firstName: '',\n    lastName: '',\n    emailAddress: '',\n  }\n\n  // Email body HTML\n  emailBody = `<p>Dear {{email.firstName}} {{email.lastName}},<br><br>\n  Thank you for allowing us the opportunity to bid on your upcoming painting project.<br><br>\n  Here is your estimate: <br><br></p>\n\n  <p>Room Name: {{roomName}}</p>\n  <p>Paint Used: {{paintUsed}}</p>\n  <p>Paint Cost: {{totalPaintCost}}</p>\n  <p>Labor Cost: {{totalLaborCost}}<br><br></p>\n  \n  <p>Total Cost: {{totalCost}}<br><br></p>\n\n  <p>We look forward to hearing from you.</p>\n  <p>Thank you, <br>\n  The Painting Company</p>`;\n\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, public calcService: CalcProvider, public emailComposer: EmailComposer, private alertCtrl: AlertController) {\n    \n    // Gets form data from the Estimate page\n    this.roomName = navParams.data.roomName; \n    this.wallHieght = navParams.data.wallHieght;\n    this.roomLength = navParams.data.roomLength;\n    this.roomWidth = navParams.data.roomWidth;\n    this.paintUsed = navParams.data.paintUsed;\n\n    this.sqFtPerHr = navParams.data.sqFtPerHr;\n    this.laborPerHr = navParams.data.laborPerHr;\n\n    this.roomPhoto = navParams.data.roomPhoto // Room photo\n    \n    // Gets estimate calculations from the CalcProvider service\n    this.totalPaintCost = this.getTotalPaintCost()\n    this.totalLaborCost = this.getTotalLaborCost()\n    this.totalCost = this.getTotalCost()\n\n  }\n\n  // Functions used to call calculations from the CalcProvider service\n\n  getTotalPaintCost() {\n    return this.totalPaintCost = this.calcService.getTotalPaintCost(this.paintUsed, this.wallHieght, this.roomLength, this.roomWidth);\n  }\n\n  getTotalLaborCost() {\n    return this.totalLaborCost = this.calcService.getTotalLaborCost(this.sqFtPerHr, this.laborPerHr, this.wallHieght, this.roomLength, this.roomWidth);\n  }\n\n  getTotalCost() {\n    return this.totalCost = this.calcService.getTotalProjectCost()\n  }\n\n  // For logging client information form inputs\n  logForm() {\n    console.log('Client information form has been submittied:', this.email)\n  }\n\n  // Cordova email plugin\n  sendEstimateEmail() {\n    this.emailComposer.isAvailable().then((available: boolean) =>{\n      if(available) {\n        console.log('Cordova is available to send an email.');\n\n        let email = {\n          to: this.email.emailAddress,\n          cc: [],\n          bcc: [],\n          attachments: [this.roomPhoto], // Room photo\n          subject: 'Painting Estimate',\n          body: this.emailBody,\n          isHtml: true\n        };\n   \n        console.log('Email to send:', email);\n        \n        // Send an email message using default options\n        this.emailComposer.open(email);\n        this.emailSentAlert();\n      } \n    }).catch((error) => {\n      console.log('Email to send:', this.emailBody);\n      this.emailNotSentAlert();\n      console.error('Cordova is not available to send an email. Error: ', error)});\n    }\n\n  // Alert for email successfully being sent\n  emailSentAlert() {\n    let alert = this.alertCtrl.create({\n      title: 'Email Sent',\n      subTitle: 'Your email was successfully sent.',\n      buttons: ['Ok']\n    });\n    alert.present();\n  }\n\n  // Alert for email unable to be sent\n  emailNotSentAlert() {\n    let alert = this.alertCtrl.create({\n      title: 'Email Not Sent',\n      subTitle: 'Your email was unable to be sent because the email composer is currently unavailable.',\n      buttons: ['Ok']\n    });\n    alert.present();\n  }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/summary/summary.ts","\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class CalcProvider {\r\n\r\n    // Hardcoded paint costs per gallon\r\n    proMarCost = 22.45;\r\n    durationCost = 41.25;\r\n    emeraldCost = 48.65;\r\n\r\n    // Initialized variables\r\n    totalSquareFeet = 0;\r\n    costPerGallon = 0;\r\n    paintCost = 0;\r\n    laborCost = 0;\r\n    totalCost = 0;\r\n\r\n    constructor() {\r\n    }\r\n\r\n    // Used to calculate the total sqaure feet of a room's walls\r\n    getSquareFeet(wallHieght: number, roomLength: number, roomWidth: number) {\r\n        console.log('Calculating sqaure feet:')\r\n        this.totalSquareFeet = wallHieght * roomLength * roomWidth\r\n        console.log(this.totalSquareFeet)\r\n        return this.totalSquareFeet\r\n    }\r\n\r\n    // Used to calculate the total cost of paint for the room\r\n    getTotalPaintCost (paintUsed: string, wallHieght: number, roomLength: number, roomWidth: number) {\r\n        this.getSquareFeet(wallHieght, roomLength, roomWidth);\r\n        console.log('Calculating total paint price:')\r\n        // Determines which paint price to use\r\n        if (paintUsed == \"ProMar 200\"){\r\n            this.costPerGallon = this.proMarCost;\r\n        }\r\n        else if (paintUsed == \"Duration\") {\r\n            this.costPerGallon = this.durationCost;\r\n        }\r\n        else { // Uses the Emerald paint price\r\n            this.costPerGallon = this.emeraldCost;\r\n        }\r\n        // Calculates the total cost of paint for the area, rounding up to the nearest gallon,\r\n        // Hardcoding 300 square feet of coverage per gallon for each type of paint\r\n        this.paintCost = Math.ceil((this.totalSquareFeet / 300)) * this.costPerGallon\r\n        console.log(this.paintCost)\r\n        // Formats the paint cost to a string in USD format\r\n        let dollarStringPaintCost = (this.paintCost).toLocaleString('en-US', {\r\n            style: 'currency',\r\n            currency: 'USD'\r\n        });\r\n        return dollarStringPaintCost\r\n    }\r\n\r\n    // Used to calculate the total labor cost for the room\r\n    getTotalLaborCost(sqFtPerHr: number, laborPerHr: number, wallHieght: number, roomLength: number, roomWidth: number) {\r\n        // Calculates the total labor cost\r\n        this.laborCost = (this.getSquareFeet(wallHieght, roomLength, roomWidth) / sqFtPerHr) * laborPerHr;\r\n        console.log('Calculating total labor cost:')\r\n        // Formats the paint cost to a string in USD format\r\n        let dollarStringLaborCost = (this.laborCost).toLocaleString('en-US', {\r\n            style: 'currency',\r\n            currency: 'USD'\r\n        });\r\n        console.log(this.laborCost)\r\n        return dollarStringLaborCost\r\n    }\r\n\r\n    // Used to calculate the total cost for the room, including paint and labor\r\n    getTotalProjectCost() {\r\n        console.log('Calculating total project cost:')\r\n        this.totalCost = this.paintCost + this.laborCost;\r\n        // Formats the paint cost to a string in USD format\r\n        let dollarStringTotalCost = (this.totalCost).toLocaleString('en-US', {\r\n            style: 'currency',\r\n            currency: 'USD'\r\n        });\r\n        console.log(this.totalCost)\r\n        return dollarStringTotalCost\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/Data/calculate-estimate.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 111;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 111\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 152;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 152\n// module chunks = 0","import { Component } from '@angular/core';\n\n//import { CostsPage } from '../costs/costs';\nimport { SummaryPage } from '../summary/summary';\nimport { HomePage } from '../home/home';\n\n@Component({\n  templateUrl: 'tabs.html'\n})\nexport class TabsPage {\n\n  tab1Root = HomePage;\n  //tab2Root = CostsPage;\n  tab3Root = SummaryPage;\n\n  constructor() {\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/tabs/tabs.ts","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\n\n// For passing form data to the Summary page\nimport { SummaryPage } from '../../pages/summary/summary';\n\n// Provider\nimport { CalcProvider } from '../../providers/Data/calculate-estimate';\n\n// Cordova camera plugin\nimport { Camera, CameraOptions } from '@ionic-native/camera';\n\n//For alert messages\nimport { AlertController } from 'ionic-angular';\n\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html',\n})\n\nexport class HomePage {\n\n  summaryPage : any;\n\n  roomPhoto: any;\n\n  // Initialization of form data\n  estimate = {\n    roomName: '',\n    wallHieght: 0, \n    roomLength: 0,\n    roomWidth: 0,\n    paintUsed: '',\n    sqFtPerHr: 0,\n    laborPerHr: 0\n  }\n\n  constructor(public navCtrl: NavController, public calcProvider: CalcProvider, private camera: Camera, public alertCtrl: AlertController){ \n  }\n\n  logForm() {\n    console.log('Estimate form has been submitted:', this.estimate)\n  }\n  \n  // Cordova camera plugin function which handles the taking of a photo\n  takePhoto() {\n    const options: CameraOptions = {\n      quality: 100,\n      destinationType: this.camera.DestinationType.FILE_URI,\n      encodingType: this.camera.EncodingType.JPEG,\n      mediaType: this.camera.MediaType.PICTURE\n    }\n    this.camera.getPicture(options).then((imageData) => {\n     // imageData is either a base64 encoded string or a file URI\n     // If it's base64 (DATA_URL):\n     let base64Image = 'data:image/jpeg;base64,' + imageData;\n     this.roomPhoto = base64Image;\n     this.photoTakenAlert(); // Alert to notify the user their photo was added\n    }, (err) => {\n     // Handle error\n     console.error('Cordova is not available to take a photo. Error: ', err);\n     this.photoNotTakenAlert(); // Alert to notify the user they are unable to add a photo\n    });\n  }\n\n  // Alert for photo successfully being taken\n  photoTakenAlert() {\n    let alert = this.alertCtrl.create({\n      title: 'Photo Added',\n      subTitle: 'Your have successfully taken a photo.',\n      buttons: ['Ok']\n    });\n    alert.present();\n  }\n\n  // Alert for photo unable to be taken\n  photoNotTakenAlert() {\n    let alert = this.alertCtrl.create({\n      title: 'Camera Not Available',\n      subTitle: 'You are currenlty unable to take a photo because the camera is unavailable.',\n      buttons: ['Ok']\n    });\n    alert.present();\n  }\n\n  // When clicking the button to create an estimate, it navigates the user to the\n  // Summary page and passes form data to that page\n  goToSummary() {\n    console.log('Creating an estimate summary for: ' + this.estimate.roomName);\n    this.navCtrl.push(SummaryPage, {      \n      roomName: this.estimate.roomName,\n      wallHieght: this.estimate.wallHieght,\n      roomLength: this.estimate.roomLength,\n      roomWidth: this.estimate.roomWidth,\n      paintUsed: this.estimate.paintUsed,\n      sqFtPerHr: this.estimate.sqFtPerHr,\n      laborPerHr: this.estimate.laborPerHr,\n      roomPhoto: this.roomPhoto // Passes photo taken \n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { NgModule, ErrorHandler } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { IonicApp, IonicModule, IonicErrorHandler } from 'ionic-angular';\nimport { MyApp } from './app.component';\n\nimport { SummaryPage } from '../pages/summary/summary';\nimport { HomePage } from '../pages/home/home';\nimport { TabsPage } from '../pages/tabs/tabs';\n\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\n// Provider\nimport { CalcProvider } from '../providers/Data/calculate-estimate';\n\n// Cordova plugins\nimport { EmailComposer } from '@ionic-native/email-composer';\nimport { Camera } from '@ionic-native/camera';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    SummaryPage,\n    HomePage,\n    TabsPage\n  ],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(MyApp)\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    SummaryPage,\n    HomePage,\n    TabsPage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\n    CalcProvider,\n    EmailComposer,\n    Camera, \n  ]\n})\n\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { TabsPage } from '../pages/tabs/tabs';\n\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  rootPage:any = TabsPage;\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts"],"sourceRoot":""}